---
const { class: className = "", ...rest } = Astro.props;
---

<button class={className} {...rest} aria-checked="false" id="theme-toggle" role="switch">
  <!-- Single SVG Icon -->
  <svg
    class="size-5 text-base-900 dark:text-white"
    fill="currentColor"
    viewBox="0 0 256 256"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm8,16.37a86.4,86.4,0,0,1,16,3V212.67a86.4,86.4,0,0,1-16,3Zm32,9.26a87.81,87.81,0,0,1,16,10.54V195.83a87.81,87.81,0,0,1-16,10.54ZM40,128a88.11,88.11,0,0,1,80-87.63V215.63A88.11,88.11,0,0,1,40,128Zm160,50.54V77.46a87.82,87.82,0,0,1,0,101.08Z"
    ></path>
  </svg>
</button>

<script>
  const toggle = document.getElementById("theme-toggle") as HTMLButtonElement;

  function updateTheme(isDark: boolean) {
    // Toggle dark mode class on the root HTML element
    document.documentElement.classList.toggle("dark", isDark);
    toggle.setAttribute("aria-checked", isDark ? "true" : "false");
    // Save the user's theme preference in localStorage
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  // Initialize theme based on localStorage or system preference
  function initializeTheme() {
    const savedTheme = localStorage.getItem("theme");
    const systemPrefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    const isDark = savedTheme ? savedTheme === "dark" : systemPrefersDark;
    updateTheme(isDark);
  }

  // Run initialization when page loads
  initializeTheme();

  // Handle toggle click event
  toggle.addEventListener("click", () => {
    const isDark = toggle.getAttribute("aria-checked") === "true";
    updateTheme(!isDark);
  });
</script>

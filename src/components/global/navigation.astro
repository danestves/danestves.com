---
import ListTreeIcon from "virtual:icons/tabler/list-tree";
import XIcon from "virtual:icons/tabler/x";

import Text from "#/components/fundations/elements/text.astro";
import Wrapper from "#/components/fundations/containers/wrapper.astro";
import ThemeToggle from "#/components/assets/theme-toggle.astro";
import BlogSearch from "#/components/blog/blog-search.astro";

const navLinks = [
  {
    text: "Home",
    href: "/",
  },
  {
    text: "Blog",
    href: "/blog",
  },
  {
    text: "Store",
    href: "/store",
  },
  {
    text: "Projects",
    href: "/projects",
  },
  {
    text: "Studio",
    href: "/studio",
  },
];
---

<style>
  .overflow-hidden-no-shift {
    overflow: hidden;
    padding-right: calc(100vw - 100%);
  }
</style>
<header>
  <Wrapper variant="standard">
    <nav role="navigation" class="grid w-full grid-cols-2 items-center justify-between gap-12 py-4">
      <div class="flex flex-row items-center gap-2">
        <Text tag="a" variant="textXL" href="/" class="text-center font-display text-base-900 italic dark:text-white">
          Daniel
        </Text>
        <ThemeToggle class="order-first focus:rounded-md focus:outline-2 focus:outline-base-500 md:order-last" />
      </div>

      <div class="ml-auto flex flex-row items-center gap-2">
        <BlogSearch />

        <button
          type="button"
          id="menuToggle"
          id="menubutton"
          aria-controls="menu"
          aria-expanded="false"
          aria-label="Toggle menu"
          class="focus:rounded-md focus:outline-2 focus:outline-base-500"
        >
          <ListTreeIcon class="size-6 shrink-0 text-base-900 transition duration-300 ease-in-out dark:text-white" />
        </button>
        <div
          id="menuContent"
          class="pointer-events-none fixed inset-0 z-9999 bg-white/20 opacity-0 backdrop-blur-xl transition-opacity duration-300 ease-in-out dark:bg-black/50"
        >
          <Wrapper variant="standard" class="relative h-full px-8 py-4">
            <button id="closeMenu" class="ml-auto flex text-base-900 dark:text-white">
              <XIcon class="size-8 shrink-0 stroke-base-950 transition duration-300 ease-in-out dark:stroke-white" />
            </button>
            <nav role="navigation" class="mt-4 flex flex-col gap-y-2">
              {
                navLinks.map((link) => (
                  <div class="flex justify-end">
                    <Text
                      tag="a"
                      variant="textXL"
                      underlined={true}
                      href={link.href}
                      title={link.text}
                      aria-label={link.text}
                      class="block text-right text-base-900 dark:text-white"
                    >
                      {link.text}
                    </Text>
                  </div>
                ))
              }
            </nav>
          </Wrapper>
        </div>
      </div>
    </nav>
  </Wrapper>
</header>

<script type="module" is:inline>
  // Wait for the DOM content to fully load before executing the script
  document.addEventListener("DOMContentLoaded", () => {
    // Get references to the menu toggle button, menu content, and close button
    const menuToggle = document.getElementById("menuToggle");
    const menuContent = document.getElementById("menuContent");
    const closeMenu = document.getElementById("closeMenu");
    // Function to toggle the visibility of the menu
    function toggleMenu() {
      // Check if the menu is currently closed (based on the presence of a specific class)
      const isOpening = menuContent.classList.contains("opacity-0");
      // Toggle classes to show/hide the menu
      menuContent.classList.toggle("opacity-0"); // Controls the opacity of the menu
      menuContent.classList.toggle("pointer-events-none"); // Toggles pointer event handling for the menu
      document.body.classList.toggle("overflow-hidden-no-shift"); // Toggles overflow behavior for the body element
      // If the menu is opening, reset and animate its links
      if (isOpening) {
        setTimeout(() => resetAndAnimateLinks(), 10); // Delay to ensure animations are applied correctly
      }
    }
    // Function to reset and apply animations to the navigation links
    function resetAndAnimateLinks() {
      // Select all anchor links inside the navigation
      const navLinks = document.querySelectorAll("nav a");
      // Loop through each link to reset its styles and apply animations
      navLinks.forEach((link, index) => {
        // Reset the opacity and position of each link to an initial state
        link.style.opacity = "0";
        link.style.transform = "translateY(20px)";
        link.style.transition = "none"; // Remove any pre-existing transitions
        // Apply a delayed animation to each link
        setTimeout(() => {
          // Set transition styles for opacity and position, with a delay based on the index
          link.style.transition = `opacity 0.3s ease-out ${index * 0.1}s, transform 0.3s ease-out ${index * 0.1}s`;
          link.style.opacity = "1"; // Fade the link in
          link.style.transform = "translateY(0)"; // Move the link back to its original position
        }, 50);
      });
    }
    // Attach the toggleMenu function to the menu toggle button's click event
    menuToggle.addEventListener("click", toggleMenu);
    // Attach the toggleMenu function to the close button's click event
    closeMenu.addEventListener("click", toggleMenu);
  });
</script>
